// scripts/generate-footer-logos.cjs
// Usage: node scripts/generate-footer-logos.cjs
// This script scans the public/Logos folder and outputs a JS file with an array of logo objects for use in Footer.astro.


const fs = require('fs');
const path = require('path');
const { readFileSync } = require('fs');
const { imageSize } = require('image-size');

const logosDir = path.join(__dirname, '../public/Logos');
const outputFile = path.join(__dirname, '../src/data/footerLogos.js');

function getAltFromFilename(filename) {
  // Remove extension and replace dashes/underscores with spaces, capitalize first letter
  const name = path.basename(filename, path.extname(filename));
  return name.replace(/[-_]/g, ' ').replace(/\b\w/g, c => c.toUpperCase());
}

function main() {
  if (!fs.existsSync(logosDir)) {
    console.error('Logos directory not found:', logosDir);
    process.exit(1);
  }
  const files = fs.readdirSync(logosDir).filter(f => /\.(png|jpe?g|svg)$/i.test(f));
  const logos = files.map(filename => {
    const src = `./Logos/${filename}`;
    let width = 1, height = 1, aspect = 1;
    const ext = path.extname(filename).toLowerCase();
    if (ext === '.svg') {
      // SVG: fallback aspect
      aspect = 1;
    } else {
      try {
        var fullPath = path.join(logosDir, filename);
        const buffer = readFileSync(fullPath);
        const dims = imageSize(buffer);
        width = dims.width;
        height = dims.height;
        aspect = width / height;
      } catch (e) {
        console.warn(`Could not get dimensions for ${filename}:`, e.message);
      }
    }
    return {
      src,
      alt: getAltFromFilename(filename),
      aspect: Number(aspect.toFixed(2)),
    };
  });
  const jsContent = `// Generated by scripts/generate-footer-logos.cjs\nexport default ${JSON.stringify(logos, null, 2)};\n`;
  fs.writeFileSync(outputFile, jsContent);
  console.log(`Generated ${outputFile} with ${logos.length} logos.`);
}

main();
